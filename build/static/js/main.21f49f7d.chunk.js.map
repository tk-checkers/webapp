{"version":3,"sources":["components/Header/index.tsx","components/Page/index.tsx","components/JoinOrCreateGame/index.tsx","containers/IndexPage/index.tsx","models/index.ts","services/match.ts","components/GameBoard/BoardTile/index.tsx","components/GameBoard/Toolbar/index.tsx","hooks/useMatch.ts","components/GameBoard/index.tsx","containers/GamePage/index.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Header","useState","headerIsOpen","setHeaderIsOpen","className","role","aria-label","href","onClick","prev","aria-expanded","aria-hidden","Page","children","Container","styled","div","MiniForm","JoinOrCreateGame","gameId","setGameId","history","useHistory","navigate","useCallback","id","push","createGame","uuidv4","joinGame","type","placeholder","value","onChange","e","target","EventType","Message","article","IndexPage","update","matchId","board","a","payload","axios","patch","process","retrieve","get","response","gameState","JSON","parse","data","BoardTileContainer","BoardTileBackground","alternate","BoardTileForeground","BoardTilePiece","player","selected","BoardTilePieceEnhanced","BoardTile","boardTilePiece","piece","split","isKing","Toolbar","onEvent","ADD_B_PIECE","ADD_R_PIECE","REMOVE_SELECTED","KING_SELECTED","INITIAL_STATE","useMatch","setGameState","retrieveFn","MatchService","useAsync","isLoading","error","useEffect","channel","Echo","broadcaster","key","cluster","forceTLS","listen","match","stopListening","BoardRowContainer","BoardRow","pieces","rowIndex","selectedTile","selectedRowIndex","selectedColIndex","map","colIndex","GameBoard","setSelectedTile","useParams","handleClick","updatedState","produce","draft","oldRowIndex","oldColIndex","handleEvent","i","length","j","selectedRow","selectedCol","selectedPiece","includes","row","GamePage","App","path","component","reducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","Boolean","window","location","hostname","Pusher","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.21f49f7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FaGithub } from 'react-icons/fa';\n\nconst Header = () => {\n    const [headerIsOpen, setHeaderIsOpen] = useState(false);\n\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"/\">\n                    Checkers\n                </a>\n\n                <a\n                    role=\"button\"\n                    className={`navbar-burger ${headerIsOpen && 'is-active'}`}\n                    onClick={() => setHeaderIsOpen((prev) => !prev)}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                >\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                    <span aria-hidden=\"true\" />\n                </a>\n            </div>\n\n            <div className={`navbar-menu ${headerIsOpen && 'is-active'}`}>\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"buttons\">\n                            <a className=\"button is-light\" href=\"https://github.com/tk-checkers/\">\n                                <span className=\"icon\">\n                                    <FaGithub />\n                                </span>\n                                <span>Github</span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React, { ReactNode } from 'react';\n\nimport Header from '../Header';\n\ntype Props = {\n    children: ReactNode;\n};\n\nconst Page = ({ children }: Props) => (\n    <div className=\"container\">\n        <Header />\n        {children}\n    </div>\n);\n\nexport default Page;\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Container = styled.div`\n    margin: 0 auto;\n    max-width: 20rem;\n`;\n\nconst MiniForm = styled.div`\n    margin: 2rem 0;\n`;\n\nconst JoinOrCreateGame = () => {\n    const [gameId, setGameId] = useState<string>('');\n    const history = useHistory();\n\n    const navigate = useCallback(\n        (id: string) => {\n            history.push(`/match/${id}`);\n        },\n        [history],\n    );\n\n    const createGame = useCallback(() => {\n        const id = uuidv4();\n        navigate(id);\n    }, [navigate]);\n\n    const joinGame = useCallback(() => {\n        navigate(gameId);\n    }, [gameId]);\n\n    return (\n        <Container>\n            <MiniForm>\n                <label className=\"label\">Join by Game ID</label>\n                <div className=\"field has-addons\">\n                    <div className=\"control is-expanded\">\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            placeholder=\"Game ID\"\n                            value={gameId}\n                            onChange={(e) => setGameId(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"control\">\n                        <a className=\"button is-info\" onClick={joinGame}>\n                            Go\n                        </a>\n                    </div>\n                </div>\n                <p className=\"help\">Ask your friend to share the Game ID with you!</p>\n            </MiniForm>\n            <MiniForm>\n                <div className=\"field\">\n                    <label className=\"label\">Create a New Game</label>\n                    <button className=\"button is-fullwidth\" onClick={createGame}>\n                        Let's play!\n                    </button>\n                </div>\n            </MiniForm>\n        </Container>\n    );\n};\n\nexport default JoinOrCreateGame;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Page from '../../components/Page';\nimport JoinOrCreateGame from '../../components/JoinOrCreateGame';\n\nconst Container = styled.div``;\n\nconst Message = styled.article`\n    text-align: center;\n    max-width: 20rem;\n    margin: 2rem auto;\n`;\n\nconst IndexPage = () => (\n    <Page>\n        <Container>\n            <Message className=\"message\">\n                <div className=\"message-body\">Play checkers with your friends, no sign-up required!</div>\n            </Message>\n            <JoinOrCreateGame />\n        </Container>\n    </Page>\n);\n\nexport default IndexPage;\n","export type Tile = 'R' | 'RK' | 'B' | 'BK' | 'E';\n\nexport type SelectedTile = [number, number] | null;\n\nexport enum EventType {\n    ADD_R_PIECE,\n    ADD_B_PIECE,\n    REMOVE_SELECTED,\n    KING_SELECTED,\n}\n\nexport type GameState = {\n    board: Tile[][];\n};\n","import axios from 'axios';\n\nimport { GameState, Tile } from \"../models\";\n\nexport const update = async (matchId: string, board: Tile[][]) => {\n    const payload = {\n        board\n    };\n\n    await axios.patch(\n        `${process.env.REACT_APP_API_URL}/api/matches/${matchId}/`,\n        payload\n    );\n};\n\nexport const retrieve = async (matchId: string) => {\n    const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/matches/${matchId}/`,\n    );\n\n    const gameState: GameState = {\n        board: JSON.parse(response.data.board)\n    };\n\n    return gameState;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Tile } from '../../../models';\n\nconst BoardTileContainer = styled.div`\n    display: flex;\n    width: 80px;\n    height: 80px;\n`;\n\nconst BoardTileBackground = styled.div<{ alternate: boolean }>`\n    width: 100%;\n    border: 1px solid black;\n\n    background-color: ${({ alternate }) => (alternate ? 'black' : 'white')};\n`;\n\nconst BoardTileForeground = styled.div`\n    width: 100%;\n    margin-left: -100%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst SelectedPieceBorder = 'border: 5px dashed white;';\n\nconst BoardTilePiece = styled.div<{ player: string; selected: boolean }>`\n    width: 40px;\n    height: 40px;\n    border-radius: 10px;\n\n    background-color: ${({ player }) => (player === 'R' ? 'red' : 'lightblue')};\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ${({ selected }) => (selected ? SelectedPieceBorder : '')}\n`;\n\n// For displaying King'd pieces\nconst BoardTilePieceEnhanced = styled.div<{ player: string }>`\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n\n    border: 1px solid black;\n    background-color: ${({ player }) => (player === 'R' ? 'red' : 'lightblue')};\n`;\n\ntype Props = {\n    alternate: boolean;\n    piece: Tile;\n    selected: boolean;\n    onClick: () => void;\n};\n\nconst BoardTile = ({ alternate, piece, selected, onClick }: Props) => {\n    let boardTilePiece;\n\n    if (piece === 'E') {\n        boardTilePiece = null;\n    } else {\n        const [player, isKing] = piece.split('');\n\n        boardTilePiece = (\n            <BoardTilePiece player={player} selected={selected}>\n                {isKing && <BoardTilePieceEnhanced player={player} />}\n            </BoardTilePiece>\n        );\n    }\n\n    return (\n        <BoardTileContainer onClick={onClick}>\n            <BoardTileBackground alternate={alternate} />\n            <BoardTileForeground>{boardTilePiece}</BoardTileForeground>\n        </BoardTileContainer>\n    );\n};\n\nexport default BoardTile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaAngleDoubleUp, FaMinusCircle, FaPlusCircle } from \"react-icons/all\";\n\nimport { EventType } from '../../../models';\n\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\ntype Props = {\n    onEvent: (e: EventType) => void;\n};\n\nconst Toolbar = ({ onEvent }: Props) => (\n    <Container>\n        <div className=\"field has-addons\">\n            <p className=\"control\">\n                <button className=\"button\" onClick={() => onEvent(EventType.ADD_B_PIECE)}>\n                    <span className=\"icon is-small\">\n                        <FaPlusCircle />\n                    </span>\n                    <span>Add Blue Piece</span>\n                </button>\n            </p>\n            <p className=\"control\">\n                <button className=\"button\" onClick={() => onEvent(EventType.ADD_R_PIECE)}>\n                    <span className=\"icon is-small\">\n                        <FaPlusCircle />\n                    </span>\n                    <span>Add Red Piece</span>\n                </button>\n            </p>\n        </div>\n        <div className=\"field has-addons\">\n            <p className=\"control\">\n                <button className=\"button\" onClick={() => onEvent(EventType.REMOVE_SELECTED)}>\n                    <span className=\"icon is-small\">\n                        <FaMinusCircle />\n                    </span>\n                    <span>Remove Selected</span>\n                </button>\n            </p>\n            <p className=\"control\">\n                <button className=\"button\" onClick={() => onEvent(EventType.KING_SELECTED)}>\n                    <span className=\"icon is-small\">\n                        <FaAngleDoubleUp />\n                    </span>\n                    <span>King Selected</span>\n                </button>\n            </p>\n        </div>\n    </Container>\n);\n\nexport default Toolbar;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useAsync } from \"react-async\";\nimport Echo from 'laravel-echo';\n\nimport { GameState } from \"../models\";\n\nimport * as MatchService from '../services/match';\n\nconst INITIAL_STATE: GameState = {\n    board: [\n        ['E', 'R', 'E', 'R', 'E', 'R', 'E', 'R'],\n        ['R', 'E', 'R', 'E', 'R', 'E', 'R', 'E'],\n        ['E', 'R', 'E', 'R', 'E', 'R', 'E', 'R'],\n        ['E', 'E', 'E', 'E', 'E', 'E', 'E', 'E'],\n        ['E', 'E', 'E', 'E', 'E', 'E', 'E', 'E'],\n        ['B', 'E', 'B', 'E', 'B', 'E', 'B', 'E'],\n        ['E', 'B', 'E', 'B', 'E', 'B', 'E', 'B'],\n        ['B', 'E', 'B', 'E', 'B', 'E', 'B', 'E'],\n    ],\n};\n\nconst useMatch = (matchId: string): GameState  => {\n    const [gameState, setGameState] = useState<GameState>(INITIAL_STATE);\n\n    // TODO: need to preload initial state\n    const retrieveFn = useCallback(\n        () => MatchService.retrieve(matchId),\n        [matchId]\n    );\n\n    const { data, error, isLoading } = useAsync(retrieveFn);\n\n    useEffect(\n        () => {\n            if (isLoading) {\n                return;\n            }\n\n            setGameState(data!);\n        },\n        [isLoading, data]\n    );\n\n    // TODO return game state as set via sockets\n    useEffect(\n        () => {\n            if (isLoading) {\n                return;\n            }\n\n            const echo = new Echo({\n                broadcaster: 'pusher',\n                key: `${process.env.REACT_APP_PUSHER_KEY}`,\n                cluster: 'us2',\n                forceTLS: true\n            });\n\n            const channel = echo.channel(`matches.${matchId}`);\n\n            channel.listen('MatchUpdated', ({match}: any) => {\n               const gameState: GameState = {\n                   board: JSON.parse(match.board)\n               };\n\n               setGameState(gameState);\n            });\n\n            return () => {\n                channel.stopListening('MatchUpdated');\n            }\n        },\n        [isLoading, matchId]\n    );\n\n    return gameState;\n}\n\nexport default useMatch;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport produce from 'immer';\nimport { useParams } from 'react-router-dom';\n\nimport { EventType, SelectedTile, Tile } from '../../models';\n\nimport * as MatchService from '../../services/match';\n\nimport BoardTile from './BoardTile';\nimport Toolbar from './Toolbar';\nimport useMatch from \"../../hooks/useMatch\";\n\nconst Container = styled.div`\n    display: inline-block;\n    margin: 2rem auto;\n`;\n\nconst BoardRowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\ntype BoardRowProps = {\n    pieces: Tile[];\n    rowIndex: number;\n    selectedTile: SelectedTile;\n    onClick: (row: number, col: number) => void;\n};\n\nconst BoardRow = ({ pieces, rowIndex, selectedTile, onClick }: BoardRowProps) => {\n    const [selectedRowIndex, selectedColIndex] = selectedTile === null ? [-1, -1] : selectedTile;\n\n    return (\n        <BoardRowContainer>\n            {pieces.map((piece, colIndex) => (\n                <BoardTile\n                    alternate={(rowIndex + colIndex + 1) % 2 == 0}\n                    key={colIndex}\n                    piece={piece}\n                    selected={rowIndex === selectedRowIndex && colIndex === selectedColIndex}\n                    onClick={() => onClick(rowIndex, colIndex)}\n                />\n            ))}\n        </BoardRowContainer>\n    );\n};\n\nconst GameBoard = () => {\n    const [selectedTile, setSelectedTile] = useState<SelectedTile>(null);\n    const { matchId } = useParams();\n    const gameState = useMatch(matchId);\n\n    const handleClick = async (rowIndex: number, colIndex: number) => {\n            const updatedState = produce(gameState, (draft) => {\n                if (selectedTile !== null) {\n                    // Move piece: set previous location to Empty, then overwrite new location with Piece\n                    const [oldRowIndex, oldColIndex] = selectedTile;\n\n                    if (oldRowIndex === rowIndex && oldColIndex === colIndex) {\n                        // Clicked on same spot twice: reset selection\n                        setSelectedTile(null);\n                        return;\n                    }\n\n                    draft.board[rowIndex][colIndex] = draft.board[oldRowIndex][oldColIndex];\n                    draft.board[oldRowIndex][oldColIndex] = 'E';\n\n                    setSelectedTile(null);\n                } else {\n                    if (draft.board[rowIndex][colIndex] !== 'E') {\n                        setSelectedTile([rowIndex, colIndex]);\n                    }\n                }\n            });\n\n            await MatchService.update(matchId, updatedState.board);\n    };\n\n    const handleEvent = async (type: EventType) => {\n        const updatedState = produce(gameState, (draft) => {\n            switch (type) {\n                case EventType.ADD_B_PIECE: {\n                    for (let i = 0; i < draft.board.length; i++) {\n                        for (let j = 0; j < draft.board[i].length; j++) {\n                            if (draft.board[i][j] === 'E') {\n                                draft.board[i][j] = 'B';\n                                return;\n                            }\n                        }\n                    }\n                }\n\n                    break;\n                case EventType.ADD_R_PIECE: {\n                    for (let i = 0; i < draft.board.length; i++) {\n                        for (let j = 0; j < draft.board[i].length; j++) {\n                            if (draft.board[i][j] === 'E') {\n                                draft.board[i][j] = 'R';\n                                return;\n                            }\n                        }\n                    }\n                }\n\n                    break;\n                case EventType.KING_SELECTED: {\n                    if (selectedTile === null) {\n                        return;\n                    }\n\n                    const [selectedRow, selectedCol] = selectedTile;\n                    const selectedPiece = draft.board[selectedRow][selectedCol];\n\n                    if (selectedPiece.includes('K')) {\n                        return;\n                    }\n\n                    draft.board[selectedRow][selectedCol] = (selectedPiece + 'K') as Tile;\n                }\n\n                    break;\n                case EventType.REMOVE_SELECTED: {\n                    if (selectedTile === null) {\n                        return;\n                    }\n\n                    const [selectedRow, selectedCol] = selectedTile;\n                    draft.board[selectedRow][selectedCol] = 'E';\n\n                    setSelectedTile(null);\n                }\n            }\n        });\n\n        await MatchService.update(matchId, updatedState.board);\n    };\n\n    return (\n        <Container>\n            <Toolbar onEvent={handleEvent} />\n\n            {gameState.board.map((row, rowIndex) => (\n                <BoardRow\n                    key={rowIndex}\n                    pieces={row}\n                    rowIndex={rowIndex}\n                    selectedTile={selectedTile}\n                    onClick={handleClick}\n                />\n            ))}\n        </Container>\n    );\n};\n\nexport default GameBoard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Page from '../../components/Page';\nimport GameBoard from '../../components/GameBoard';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst GamePage = () => (\n    <Page>\n        <Container>\n            <GameBoard />\n        </Container>\n    </Page>\n);\n\nexport default GamePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport IndexPage from './containers/IndexPage';\nimport GamePage from './containers/GamePage';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/match/:matchId\" component={GamePage} />\n                <Route path=\"/\" component={IndexPage} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { combineReducers, configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst reducers = combineReducers({\n    // product: productReducer,\n    // auth: authReducer\n});\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Pusher from 'pusher-js';\n\n(window as any).Pusher = Pusher;\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}